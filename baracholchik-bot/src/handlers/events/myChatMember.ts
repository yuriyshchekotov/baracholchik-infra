import type { BotContext } from '../../types';
import ChatManager from '../../db/ChatManager';

const myChatMemberHandler = async (ctx: BotContext): Promise<void> => {
  const payload = ctx.myChatMember;
  if (!payload || !payload.chat || !payload.new_chat_member || !payload.new_chat_member.status) return;

  const chat = payload.chat;

  // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –ª–∏—á–Ω—ã–µ –ø–µ—Ä–µ–ø–∏—Å–∫–∏
  if (chat.type === 'private') return;

  const status = payload.new_chat_member.status;

  // –ï—Å–ª–∏ –±–æ—Ç –ø–æ–∫–∏–Ω—É–ª —á–∞—Ç, –±—ã–ª —É–¥–∞–ª—ë–Ω –∏–ª–∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω ‚Äî –æ—Ç–∫–ª—é—á–∞–µ–º follow
  const leftStatuses = ['left', 'kicked'];

  if (leftStatuses.includes(status)) {
    ChatManager.setFollow(chat.id, false);
    console.log(`üëã –ë–æ—Ç –ø–æ–∫–∏–Ω—É–ª —á–∞—Ç ${chat.title || '(–±–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è)'} (${chat.id})`);
  }

  // –ï—Å–ª–∏ –±–æ—Ç –±—ã–ª –¥–æ–±–∞–≤–ª–µ–Ω –≤ —á–∞—Ç ‚Äî –≤–∫–ª—é—á–∞–µ–º follow
  const joinedStatuses = ['member', 'administrator', 'restricted'];
  if (joinedStatuses.includes(status)) {
    ChatManager.addIfNotExists({
      id: chat.id,
      title: chat.title || '(–±–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è)',
      type: chat.type
    });
    ChatManager.setFollow(chat.id, true);
    console.log(`ü§ñ –ë–æ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ —á–∞—Ç ${chat.title || '(–±–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è)'} (${chat.id})`);
  }
};

export default myChatMemberHandler; 