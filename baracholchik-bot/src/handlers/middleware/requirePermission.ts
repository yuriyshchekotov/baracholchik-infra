import type { BotContext, MiddlewareFunction } from '../../types';
import UserManager from '../../db/UserManager';

const requirePermission = (permissionName: string): MiddlewareFunction => {
  return async (ctx: BotContext, next: () => Promise<void>) => {
    const userId = ctx.from?.id;
    if (!userId) {
      console.log('‚ùå No user ID found in context');
      await ctx.reply('–û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
      return;
    }

    const user = UserManager.getById(userId) || UserManager.addUserIfNotExists(userId);

    if (!user.hasPermission(permissionName)) {
      console.log(`‚ùå Permission denied: User ${userId} doesn't have permission '${permissionName}'`);
      await ctx.reply('–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã üîí');
      return;
    }

    await next();
  };
};

export default requirePermission;